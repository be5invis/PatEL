#!/usr/bin/env node
var patel = require('../index');
var fs = require('fs');
var util = require('util');
var yargs = require('yargs')
	.alias('o', 'output-into')
	.alias('?', 'help')
	.describe('help', 'Displays this help.')
	.describe('o', 'Output sfd path. When absent, the result sfd is written to STDOUT.');

var argv = yargs.argv;
var instream = argv._[0] ? fs.createReadStream(argv._[0]): process.stdin;
var outstream = argv.o ? fs.createWriteStream(argv.o, { encoding: 'utf-8' }): process.stdout;

var input = '';
instream.on('data', function(buf){ input += buf.toString() })
instream.on('end', function(){
	var gs = patel.globals();
	try {
		var ast = patel.parse(input + "\n\n");
		try {
			outstream.write(patel.compile(ast, gs));
		} catch(ex) {
			process.stderr.write(util.inspect(ex) + '\n')
		}
	} catch(ex) {
		process.stderr.write(ex.message + '\n');
		process.stderr.write("At Line " + ex.line + ', Column ' + ex.column + '\n');
		var line = input.split('\n')[ex.line - 1]
		process.stderr.write(line + '\n');
		process.stderr.write(line.replace(/\S/g, ' ').slice(0, ex.column) + '^\n');
	}
});