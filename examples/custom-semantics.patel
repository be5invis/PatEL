define-macro pointer : syntax-rules
	`[pointer @x] : return `{	.get [lambda [] @x]
	                           	.set [lambda [t] [set @x t]] }

local a 1
local at-a [pointer a]

local b 2
local at-b [pointer b]

define [falsy x] [not x]
define-macro myor : syntax-rules
	`[myor @x @y] `[begin \\
		local t @x
		if [falsy t] @y t
	]

define-macro myor-dirty : syntax-rules
	`[myor-dirty @x @y] : dirty `[begin \\
		local t @x
		if [falsy t] @y t
	]

let : begin
	console.log [myor 1 2]                                      	# 1
	console.log t                                                   # undefined
	let [falsy [lambda [x] true]] : console.log [myor 1 2]      	# 1
let : begin
	console.log [myor-dirty 1 2]                                	# 1
	console.log t                                                   # 1
	let [falsy [lambda [x] true]] : console.log [myor-dirty 1 2]	# 2